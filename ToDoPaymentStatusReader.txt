PENDIENTE
---------
- Comprobar que el fichero de Base de datos es legible (Ok)
- Comprobar que el fichero de devoluciones es legible (Ok)
- Leer el fichero a un string (controlar las excepciones)
- Antes de leer el fichero de devoluciones:
	-> Comprobar que existe y es legible (comprobar path y File.Exists)(Ok)
	-> VALIDARLO en dos pasos:
		* Leer el fichero en un string.
			-> Pueden haber errores de lectura. Captura las excepciones y SALIR con exitCodes. (Ok)
		* Validar el string. Dos tipos de errroes posibles. Capturarlos y salir con ExitCodes
			-> El fichero XML es erroneo (etiquetas incompletas, por ejemplo). 
			-> No es comatible con el esquema pain.002.001.03 
- El procedimiento de validación no se hace desde este programa, sino que lo lanza la librería.
	-> En el programa, lanzar el proceso con try y capturar las excepciones
		* Se lanza mensaje de error
		* Se sale con un ExitCode que indique el error


---------------------------------------
---------------------------------------
Este codigo es la base de la inserción


CODIGO
------

// define the INSERT statement using **PARAMETERS**
string insertStmt = "INSERT INTO dbo.REPORT_MARJORIE_ROLE(REPORT_ID, ROLE_ID, CREATED_BY, CREATED) " + 
                    "VALUES(@ReportID, @RoleID, 'SYSTEM', CURRENT_TIMESTAMP)";

// set up connection and command objects in ADO.NET
using(SqlConnection conn = new SqlConnection(-your-connection-string-here))
using(SqlCommand cmd = new SqlCommand(insertStmt, conn)
{
    // define parameters - ReportID is the same for each execution, so set value here
    cmd.Parameters.Add("@ReportID", SqlDbType.Int).Value = YourReportID;
    cmd.Parameters.Add("@RoleID", SqlDbType.Int);

    conn.Open();

    // iterate over all RoleID's and execute the INSERT statement for each of them
    foreach(int roleID in ListOfRoleIDs)
    {
      cmd.Parameters["@RoleID"].Value = roleID;
      cmd.ExecuteNonQuery();
    }

    conn.Close();
}   

TODO DENTRO DE UNA TRANSACCION
------------------------------

 using (TransactionScope scope = new TransactionScope())
 {
     // bla bla bla EF or ADO.NET
     scope.complete();
 }

