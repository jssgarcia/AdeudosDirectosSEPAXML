PENDIENTE
---------
- Antes de leer el fichero de devoluciones hemos de VALIDARLO
- El procedimiento de validación no se hace desde este programa, ni desde DirectDebits, sino que la funcion de validación con el esquema lo debe hacer ISO20022PaymentInitiations
	-> Implementar la validación en ISOPaymentInitiations (Ok)
	-> Crear los tests los tests (Ok)
	-> El método de validación se invoca desde DirectDebitElements -> SEPAMessagesManager ->ReadISO20022PaymentStatusReportStringMessage
		* Si no se ha validado corerctamente LANZAR UNA EXCEPCION. Puede ser por dos razones: (Ok)
			-> El fichero no es un XML valido -> se recibe una excepcion XMLException (Ok)
			-> Errores en el esquema (se recibe una cadena distinta de "") (Ok)
	-> Crear los tests
	-> En el programa, lanzar el proceso con try y capturar la excepcion
		* Se lanza mensaje de error
		* Se sale con un ExitCode que indique el error


---------------------------------------
---------------------------------------
Este codigo es la base de la inserción


CODIGO
------

// define the INSERT statement using **PARAMETERS**
string insertStmt = "INSERT INTO dbo.REPORT_MARJORIE_ROLE(REPORT_ID, ROLE_ID, CREATED_BY, CREATED) " + 
                    "VALUES(@ReportID, @RoleID, 'SYSTEM', CURRENT_TIMESTAMP)";

// set up connection and command objects in ADO.NET
using(SqlConnection conn = new SqlConnection(-your-connection-string-here))
using(SqlCommand cmd = new SqlCommand(insertStmt, conn)
{
    // define parameters - ReportID is the same for each execution, so set value here
    cmd.Parameters.Add("@ReportID", SqlDbType.Int).Value = YourReportID;
    cmd.Parameters.Add("@RoleID", SqlDbType.Int);

    conn.Open();

    // iterate over all RoleID's and execute the INSERT statement for each of them
    foreach(int roleID in ListOfRoleIDs)
    {
      cmd.Parameters["@RoleID"].Value = roleID;
      cmd.ExecuteNonQuery();
    }

    conn.Close();
}   

TODO DENTRO DE UNA TRANSACCION
------------------------------

 using (TransactionScope scope = new TransactionScope())
 {
     // bla bla bla EF or ADO.NET
     scope.complete();
 }

